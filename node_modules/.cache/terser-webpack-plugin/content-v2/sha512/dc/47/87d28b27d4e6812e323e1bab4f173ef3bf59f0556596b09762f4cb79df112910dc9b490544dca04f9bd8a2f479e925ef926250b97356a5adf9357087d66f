{"map":"{\"version\":3,\"sources\":[\"/Users/PhiHai/Desktop/BootCamp/clickity-game/src/components/imagecards/index.js\",\"/Users/PhiHai/Desktop/BootCamp/clickity-game/src/components/Wrapper/index.js\",\"/Users/PhiHai/Desktop/BootCamp/clickity-game/src/App.js\",\"/Users/PhiHai/Desktop/BootCamp/clickity-game/src/serviceWorker.js\",\"/Users/PhiHai/Desktop/BootCamp/clickity-game/src/index.js\"],\"names\":[\"ImageCard\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"name\",\"src\",\"image\",\"Wrapper\",\"children\",\"App\",\"components_Wrapper\",\"Images\",\"map\",\"element\",\"i\",\"imagecards\",\"key\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"0mDAaeA,IAAAA,EAVf,SAAmBC,GACf,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,iBCAlCC,IAAAA,EAJf,SAAiBT,GACf,OAAOC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WAAWJ,EAAMU,kBCmB1BC,IAAAA,EAjBf,WACE,OACEV,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,MAAA,KACEF,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBAEFF,EAAAC,EAAAC,cAACS,EAAD,KACGC,EAAOC,IAAI,SAACC,EAASC,GACpB,OACEf,EAAAC,EAAAC,cAACc,EAAD,CAAWC,IAAKF,EAAGV,KAAMS,EAAQT,KAAME,MAAOO,EAAQP,aCH9CW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOxB,EAAAC,EAAAC,cAACuB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nfunction ImageCard(props) {\\n    return (\\n        <div className=\\\"card\\\">\\n            <div className=\\\"img-container\\\">\\n                <img alt={props.name} src={props.image} />\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default ImageCard;\",\"import React from \\\"react\\\";\\nimport \\\"./style.css\\\";\\n\\nfunction Wrapper(props) {\\n  return <div className=\\\"wrapper\\\">{props.children}</div>;\\n}\\n\\nexport default Wrapper;\",\"import React from \\\"react\\\";\\nimport ImageCard from \\\"./components/imagecards\\\";\\nimport Wrapper from \\\"./components/Wrapper\\\";\\nimport Images from \\\"./images.json\\\";\\n// import \\\"./App.css\\\";\\n\\nfunction App() {\\n  return (\\n    <div>\\n      <div>\\n        <h1>Clicky Game</h1>\\n      </div>\\n      <Wrapper>\\n        {Images.map((element, i) => {\\n          return (\\n            <ImageCard key={i} name={element.name} image={element.image} />\\n          );\\n        })}\\n      </Wrapper>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e){e.exports=[{id:1,name:\"FlashDC\",image:\"https://www.spriters-resource.com/resources/sheets/100/103142.png\"},{id:2,name:\"Batman Funko\",image:\"https://images-na.ssl-images-amazon.com/images/I/41trnBjzshL.jpg\"},{id:3,name:\"Lego Robin\",image:\"https://i.ebayimg.com/images/g/uEcAAOSwzsFaGibj/s-l640.jpg\"},{id:4,name:\"lego Robin2\",image:\"https://i.pinimg.com/originals/3b/40/c0/3b40c0027c41543b22a41275bc0c4caf.jpg\"},{id:6,name:\"lego Batman2\",image:\"https://vignette.wikia.nocookie.net/lego-dimensions/images/d/d6/BatmanTLBMNew.png/revision/latest?cb=20170211222839\"},{id:7,name:\"lego Superman\",image:\"http://graphicpolicy.files.wordpress.com/2012/05/lego-batman-2-superman.jpg\"},{id:8,name:\"lego Joker\",image:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThs62nSRAGhZ6Zd0Sqti6psgKyV7pAfnjRRz6rlsO_pz2oKIC0\"},{id:10,name:\"wonderwoman\",image:\"http://www.fubiz.net/wp-content/uploads/2014/12/Superman-Wonder-Woman.jpg\"},{id:11,name:\"wonderwoman2\",image:\"https://cdn2.techadvisor.co.uk/cmsdata/features/3679849/wonder-woman-1984_thumb900_1-1.jpg\"},{id:9,name:\"flash\",image:\"https://i.pinimg.com/originals/fa/40/43/fa40433fee433ad4818f90092189919f.jpg\"},{id:5,name:\"flash\",image:\"https://www.galleryplus.net/media/uploads/2014/12/batgirl-barbara-gordan-by-krthompsonart-on-deviantart-1419563718k48ng.jpg\"},{id:0,name:\"flash\",image:\"https://i.ebayimg.com/images/i/392245003061-0-1/s-l1000.jpg\"}]},function(e,a,n){e.exports=n(13)},,,,,,function(e,a,n){},function(e,a,n){},function(e,a,n){},function(e,a,n){\"use strict\";n.r(a);var t=n(0),i=n.n(t),o=n(2),m=n.n(o);n(10),n(11);var r=function(e){return i.a.createElement(\"div\",{className:\"card\"},i.a.createElement(\"div\",{className:\"img-container\"},i.a.createElement(\"img\",{alt:e.name,src:e.image})))};n(12);var s=function(e){return i.a.createElement(\"div\",{className:\"wrapper\"},e.children)},c=n(3);var g=function(){return i.a.createElement(\"div\",null,i.a.createElement(\"div\",null,i.a.createElement(\"h1\",null,\"Clicky Game\")),i.a.createElement(s,null,c.map(function(e,a){return i.a.createElement(r,{key:a,name:e.name,image:e.image})})))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));m.a.render(i.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[4,1,2]]]);","extractedComments":[]}